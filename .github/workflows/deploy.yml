name: Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: SSH into EC2 Instance and Install Docker and Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Connected to EC2 instance!"
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

      - name: Clone repository on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu
            if [ -d "app" ]; then
              sudo rm -rf app
            fi
            git clone https://github.com/danielazizyan/pyforge-python-school-3.git app
            cd app
            git checkout main

      - name: Create .env on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "DB_HOST=localhost" >> /home/ubuntu/app/.env
            echo "DB_PORT=5433" >> /home/ubuntu/app/.env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> /home/ubuntu/app/.env
            echo "DB_USER=${{ secrets.DB_USER }}" >> /home/ubuntu/app/.env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> /home/ubuntu/app/.env
            chmod 600 /home/ubuntu/app/.env

      - name: Set Up Python Virtual Environment and Install Dependencies
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt-get install -y python3-pip python3-venv
            cd /home/ubuntu/app
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

      - name: Run Docker Compose on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app/
            sudo docker-compose down
            sudo docker-compose up -d --build
            alembic upgrade head

      - name: Confirm Application is Running
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            curl -I http://localhost || echo "Application failed to start"
